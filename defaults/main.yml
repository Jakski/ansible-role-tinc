---
###
# Packages with tinc and related tools
tinc_packages:
  - tinc

###
# Host identifier in network
tinc_host_name: "{{ inventory_hostname }}"

###
# systemd service template
tinc_service: tinc@

###
# Default packages release
tinc_default_release: ""
#
###
# Desired service state
tinc_state: started

###
# Whether to enable system service
tinc_enabled: true

###
# Whether to restart when necessary
tinc_restart: true

###
# Whether to reload when necessary
tinc_reload: true

###
# Configuration directory
tinc_conf_dir: /etc/tinc

###
# Generated keys length
tinc_key_bits: 4096

###
# Network name
tinc_network_name: example-network

###
# Inventory group with network nodes
tinc_group: example-network-nodes

###
# Main configuration
tinc_main_conf: {}

###
# Host configuration. It will be propagated to all nodes in network.
tinc_host_conf: {}

###
# Private key. Must be used together with public key.
tinc_private_key: ~

###
# Public key. Must be used together with private key.
tinc_public_key: ~

###
# Hooks
tinc_scripts:
  tinc-up: |
    #!/usr/bin/env bash
    ip link set up "$INTERFACE"
  subnet-up: |
    #!/usr/bin/env bash
    if [ "$NAME" = "$NODE" ]; then
      ip address add dev "$INTERFACE" "$SUBNET"
    else
      ip route add "$SUBNET" dev "$INTERFACE"
    fi
  subnet-down: |
    #!/usr/bin/env bash
    if [ "$NAME" = "$NODE" ]; then
      ip address del "$SUBNET" dev "$INTERFACE"
    else
      ip route del dev "$INTERFACE" "$SUBNET"
    fi

###
# Whether to remove host configurations non-existent in group
tinc_manage_hosts: true

###
# Don't manage this hosts. It let's you authorize external hosts, managing
# the rest at the same time.
tinc_hosts_whitelist: []
